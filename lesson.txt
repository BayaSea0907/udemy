
-----------------------------------------------------------------------------
◇ Pythonメモ

・8/20(月) 1~4-19間で終了。4-20のタプル型から。

-----------------------------------------------------------------------------
◇ 3.Pythonの基本

・type(num) 	... データの型を調べる。

・str[-1] 	... 最後の文字が表示される。

・str[1:5] 	... １番目～5番目までの文字が表示される。([:5]で、0~5番目まで)

・'a is {}'.format('a') ... {}に、'a'が代入される。


-----------------------------------------------------------------------------
◇ 4.データ構造

・list型          ... Arrayとは別。listName.index(0)で、arrayName[0]と同じ。

・list型のコピー   ... 「i = [1,2,3] / j = i」 とすると、j[0] = 100とした際に、i[0]も100になってしまう。
		      → C言語の参照渡しと同じ。

------------------------------------------------------
◆ List

>>> array = [1, 20, 31, 5, 77]
>>>
>>> array
[1, 20, 31, 5, 77]
>>>
>>> array[0]
1
>>>
>>> array[3]
5
>>> array[-1]
77
>>> array[-2]
5
>>> array[:3]
[1, 20, 31]
>>>
>>>
>>> array[2:]
[31, 5, 77]
>>>
>>> array[:]
[1, 20, 31, 5, 77]
>>>
>>>
>>> array[1:3]
[20, 31]
>>>
>>> type(array)
<class 'list'>
>>>
>>> list("BayaSea")
['B', 'a', 'y', 'a', 'S', 'e', 'a']
>>>
>>>
>>>
>>> array = list("BayaSea")
>>>
>>>
>>> array[::2]
['B', 'y', 'S', 'a']
>>>
>>>
>>> array[::-1]
['a', 'e', 'S', 'a', 'y', 'a', 'B']
>>>
>>>
>>> a = list("aaa")
>>> b = list("BayaSea")
>>>
>>> x = [a, b]
>>>
>>> x
[['a', 'a', 'a'], ['B', 'a', 'y', 'a', 'S', 'e', 'a']]
>>>
>>> x[-]
  File "<stdin>", line 1
    x[-]
       ^
SyntaxError: invalid syntax
>>>
>>>
>>> x[0]
['a', 'a', 'a']
>>>
>>>
>>>
>>> x[1]
['B', 'a', 'y', 'a', 'S', 'e', 'a']
>>> x[::]
[['a', 'a', 'a'], ['B', 'a', 'y', 'a', 'S', 'e', 'a']]
>>>
>>>
>>>
>>>
>>> x[:]
[['a', 'a', 'a'], ['B', 'a', 'y', 'a', 'S', 'e', 'a']]
>>>

                     
------------------------------------------------------
◆ 4-14 list続き

>>>
>>>
>>>
>>>
>>> s list("BayaSea")
  File "<stdin>", line 1
    s list("BayaSea")
         ^
SyntaxError: invalid syntax
>>>
>>>
>>> s = list("BayaSea")
>>>
>>>
>>> s
['B', 'a', 'y', 'a', 'S', 'e', 'a']
>>>
>>>
>>>
>>>
>>>
>>> s[2:5] = "A"
>>>
>>> s
['B', 'a', 'A', 'e', 'a']
>>>
>>>
>>> s,append 100
  File "<stdin>", line 1
    s,append 100
               ^
SyntaxError: invalid syntax
>>>
>>>
>>> s,append(100)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'append' is not defined
>>>
>>>
>>> s
['B', 'a', 'A', 'e', 'a']
>>>
>>>
>>> s,append(100)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'append' is not defined
>>>
>>>
>>> s.append(100)
>>>
>>> s
['B', 'a', 'A', 'e', 'a', 100]
>>>
>>>
>>> s.insert(0, 5)
>>>
>>> s
[5, 'B', 'a', 'A', 'e', 'a', 100]
>>>
>>>
>>> s.pop()
100
>>>
>>> s
[5, 'B', 'a', 'A', 'e', 'a']
>>>
>>> s.pop(2)
'a'
>>>
>>> s
[5, 'B', 'A', 'e', 'a']
>>>
>>> del s[1]
>>>
>>>
>>> s
[5, 'A', 'e', 'a']
>>>
>>>
>>> del s
>>>
>>>
>>> s
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 's' is not defined
>>>
>>>
>>> a = [1,2]
>>> b = [5,6]
>>>
>>> x = a+b
>>> x
[1, 2, 5, 6]
>>>
>>> a += b
>>> a
[1, 2, 5, 6]
>>>
>>>
>>>
------------------------------------------------------
◆ 4-17

>>> r = [1,2,3,4,5,1,3,6,1,5]
>>>
>>>
>>> r.index(0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: 0 is not in list
>>>
>>>
>>> r.index(1)
0
>>>
>>> r.index(5)
4
>>> r.index
<built-in method index of list object at 0x7f151e133308>
>>>
>>>
>>> r.count
<built-in method count of list object at 0x7f151e133308>
>>>
>>>
>>> r.size
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'list' object has no attribute 'size'
>>>
>>>
>>> r.index(10)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: 10 is not in list
>>>
>>> r.index(9)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: 9 is not in list
>>>
>>> r.index(6)
7
>>> 6が何番目にあるかを調べてくれる
  File "<stdin>", line 1
    6が何番目にあるかを調べてくれる
                   ^
SyntaxError: invalid syntax
>>>
>>> r.count(1)
3
>>>
>>> r.each
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'list' object has no attribute 'each'
>>>
>>>
>>> r.foreach
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'list' object has no attribute 'foreach'
>>>
>>>
>>> ソート
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'ソート' is not defined
>>>
>>>
>>>
>>>
>>>
>>>
>>> r
[1, 2, 3, 4, 5, 1, 3, 6, 1, 5]
>>>
>>>
>>>
>>> r.sort
<built-in method sort of list object at 0x7f151e133308>
>>> r
[1, 2, 3, 4, 5, 1, 3, 6, 1, 5]
>>>
>>>
>>> r.sort()
>>>
>>> r
[1, 1, 1, 2, 3, 3, 4, 5, 5, 6]
>>>
>>>
>>> r.sort(reverse=true)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'true' is not defined
>>> r.sort(reverse=True)
>>>
>>> r
[6, 5, 5, 4, 3, 3, 2, 1, 1, 1]
>>>
>>>
>>> r.reverse()
>>> r
[1, 1, 1, 2, 3, 3, 4, 5, 5, 6]
>>>
>>>
>>> to_split = r.split('')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'list' object has no attribute 'split'
>>> to_split = r.split(' ')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'list' object has no attribute 'split'
>>>
>>>
>>>
>>> str = "My name is BayaSea."
>>>
>>> to_split = str.split(" ")
>>>
>>> to_split
['My', 'name', 'is', 'BayaSea.']
>>>
>>>
>>>
>>> to_split = str.split(".")
>>>
>>>
>>> to_split
['My name is BayaSea', '']
>>>
>>>
>>>
>>> to_split = str.split(" ")
>>>
>>>
>>> to_split
['My', 'name', 'is', 'BayaSea.']
>>>
>>>
>>>
>>>
>>> x = " ".join(to_split)
>>> x
'My name is BayaSea.'
>>>
>>>
>>>
>>> y = to_split.join()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'list' object has no attribute 'join'
>>>
>>>
>>> y = "".join(to_split)
>>>
>>> y
'MynameisBayaSea.'
>>>
>>>
>>>
>>>
>>>
------------------------------------------------------
◆ 4-18 list続き
>>>
>>>
>>>
>>>
>>>
>>> i = [1, 3, 5]
>>> j = i
>>>
>>> j[0] = 100
>>>
>>> j
[100, 3, 5]
>>>
>>> i
[100, 3, 5]
>>>
>>>
>>> // Cのポインタと同じだよーーー
  File "<stdin>", line 1
    // Cのポインタと同じだよーーー
     ^
SyntaxError: invalid syntax
>>>
>>>
>>>
>>> x = [1, 3, 5]
>>> y = x.copy()
>>>
>>> x
[1, 3, 5]
>>> y
[1, 3, 5]
>>>
>>>
>>> x[0] = 100
>>>
>>> x
[100, 3, 5]
>>> y
[1, 3, 5]
>>>
>>> # aaaaaa
...
>>>
>>>
>>>
>>> # コメントです
...
KeyboardInterrupt
>>>
>>>
>>>
>>> id(i)
139728674751240
>>> id(j)
139728674751240
>>>
>>> id(x)
139728683209928
>>> id(y)
139728683233736
>>>
>>> # idは、addressを出力できる。
...
KeyboardInterrupt
>>>
>>> #

-------------------------------------------------
section4  lecture22

タプル(定数の概念に近い。)
t = (1, 2, 3, 5, 16)
t = 1, 2, 3, 5, 16 ... 同じ

t[0] = 5 とかはできない。
読み込み専用の配列みたいな。

x, y = 10, 20 
print(x, y) 

#=> 10 20
※ 10, 20は、pythonの仕様上、タプルという扱いをされている。


-------------------------------------------------
section4  lecture23

ディクショナリ
d = {"x": 10, "y": 20}
d["x"]
>>>>> 10

d.keys()
#=> ["x", "y"]

d.values()
#=> [10, 20]

"x" in d
#=> True  
※ dにxが含まれていればTrue


section4  lecture28

集合
a = {1, 2, 3, 4, 5, 6}
b = {2, 4, 5}

a - b
#=> {1, 3, 4, 6}

a & b
#=> {2, 4, 5}

a | b 
#=> {1, 2, 3, 4, 5, 6}

-------------------------------------------------
section5  制御フローと、コード構造

1行が長くなる時 ... バックスラッシュ(\)をケツにつける。

a == b && \
b != c

みたいな。

section5  lecture32

if x < 0:
	# success処理
elsif: x == 0
	# {}もdoもいらない。インデントをずらす。
else:
	# endもいらない。


section5  lecture34

&&がない。「and」を使う。
||がない。「or」を使う。

section5  lecture36

Rubyのtrueが、True。
Rubyのfalseが、False。
Rubyのnilが、None。(多分)

section5  lecture37

is ... Noneかどうかの時に使う。
(a is None)

-------------------------------------------------
section5  lecture39

whileがある。
main的なものを用意する必要がある・・・かも！？

-------------------------------------------------
section5  lecture40

nu, = input("Enter: ")
#=> Enter: ... ←　入力待ち状態になる。
