◇ 8. ファイル操作とシステム

-------------------------------------------------
◇ ファイルの作成

f = open('test.txt', 'w')  # w...write, a...append, r...read
f.write('test')
f.close()

-------------------------------------------------
◇ ファイルの読み込み

f1 = open('test.txt', 'r')

# ファイル内容を全部読み込み
print(f1.read())
#=> test
#=> 111
#=> 222

# 1行ずつ読み込み。
print(f1.readline())
#=> test

# 1文字ずつ読み込み。\nも1文字判定。
print(f1.read(5))
#=> test
#=> aaa

# ブロックを抜けると、file.closeが自動で実行される。
with open('test.txt', 'r') as f2: 
  print(f2.readline())
#=> test

f1.close()
# f2.close() はすでに行われている。

-------------------------------------------------
◇ seekと、ブロックを使った読み書き込み


# 初めにファイルを読み込んで、そのあと書き込み。
with open('test.txt', 'r+') as f:

# 初めにファイルを作成して、そのあと読み込み。
with open('test.txt', 'w+') as f:
  f.write(s)
  s.seek(0)
  print(f.read())

-------------------------------------------------
◇ CSVファイルへの書き込みと読み込み

import csv

# 書き込み
with open('test.csv', 'w') as csv_file:
        field_names = ['Name', 'Count']

        writer = csv.DictWriter(csv_file, fieldnames = field_names)
        writer.writeheader() #フィールドを書き込み

        writer.writerow({'Name': 'A', 'Count': 1}) # フィールドに応じたデータを保存
        writer.writerow({'Name': 'Baya', 'Count': 2})
        writer.writerow({'Name': 'Sea', 'Count': 3})

#  最初にカラムが来る
#=> Name, Count
#=> A,    1
#=> Baya, 1
#=> Sea,  3

# 読み込み
with open('test.csv', 'r') as csv_file:
  data = csv.DictReader(csv_file)
  
  for row in data:
    print(row['Name'], row['Count'])
    
-------------------------------------------------
◇ ファイル操作


import os       # 既存ファイルの操作？
import pathlib  # ファイル作成
import glob     # ディレクトリ内のファイル検索

# ファイルの状態チェック
os.path.exists('test.txt')  # 存在すればtrue
os.path.isfile('test.txt')  # ファイルであればtrue
os.path.isdir('python')     # ディレクトリがあればtrue

# ファイル作成
pathlib.Path('empty.txt').touch()

# ファイル削除
os.remove('empty.txt')  # copyやら、mvやらも存在する。

# ディレクトリ作成 
# ※ このファイルのある場所にディレクトリが作成される。嫌な場合は、rootを指定
os.mkdir('test_dir')
os.mkdir('test_dir1/test_dir2') # test_dir1が存在していないので、エラーになる

# カレントディレクトリから見た絶対パスの取得
abs_path = os.path.abspath(".") 
#=> '/home/h_kobayashi/udemy/python/section8'

# *でtest_dir内のすべてのファイルを配列で取得。
glob.glob('test_dir/*')
glob.glob('*')
#=> ['csv_test.py', 'dir_test.py', 'file_create.py', 'file_read.py', 'test.csv', 'test.txt']

-------------------------------------------------
◇ zipの作成と展開

# zipの作成
import zipfile
import glob

with ziplfile.ZipFile('test.zip', 'w') as z:

  # dir/**は、dir以下のファイルをすべて取得。
  for f in glob.glob('test_dir/**', recursive=True):
    # 取得したファイルをzipファイルに登録的な
    z.write(f)
    
  
# zipの読み込み
with zipfile.ZipFile('test.zip', 'r') as z:
  # aaaaZipとしてtest.zipを展開する
  z.extractall('aaaaZip')

-------------------------------------------------
◇ tempfile
※ 一時ファイルを作成することが出来る。

-------------------------------------------------
◇ subprocess

import subprocess

# run(['cmmand', 'option'])
# ファイル作成なども行えます。
subprocess.run(['ls', '-a'])

-------------------------------------------------
◇ detatime

import datetime
now = datetime.datetime.now()

# 時間の表示
print(now)          #0年/0月/0日-0時00分00秒00
print(now.strftime('%y年/%m月/%d日-%H時%M分%S秒%f'))

# 時間の作成
t = datetime.time(hour=1, minute=10, second=5, microsecond=100)
print(t)
#=> 01:10:05:000100

# 1週間前
d = datetime.timedelta(weeks=-1)
print(now - d)

-------------------------------------------------
◇ time

import time

# 処理を1秒間停止
time.sleep(1)
